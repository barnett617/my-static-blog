<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms on Wilson&#39;s Blog</title>
    <link>https://www.wilsonpage.com/tags/algorithms/</link>
    <description>Recent content in Algorithms on Wilson&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans-CN</language>
    <lastBuildDate>Sun, 11 Jun 2023 00:42:00 +0000</lastBuildDate>
    <atom:link href="https://www.wilsonpage.com/tags/algorithms/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript的基础排序实现</title>
      <link>https://www.wilsonpage.com/posts/2023-06-11-js-sort/</link>
      <pubDate>Sun, 11 Jun 2023 00:42:00 +0000</pubDate>
      <guid>https://www.wilsonpage.com/posts/2023-06-11-js-sort/</guid>
      <description>关于JavaScript基础排序算法的整理</description>
    </item>
    <item>
      <title>二叉树的三种遍历（递归&#43;迭代）</title>
      <link>https://www.wilsonpage.com/notes/2020-04-16-binary-tree-iteration-methods/</link>
      <pubDate>Thu, 16 Apr 2020 17:10:48 +0000</pubDate>
      <guid>https://www.wilsonpage.com/notes/2020-04-16-binary-tree-iteration-methods/</guid>
      <description>二叉树的三种遍历（递归+迭代）</description>
    </item>
    <item>
      <title>Java基础算法（插入、选择、冒泡、快排）</title>
      <link>https://www.wilsonpage.com/notes/2016-12-15-java-basic-sort-algorithms/</link>
      <pubDate>Thu, 15 Dec 2016 23:20:37 +0000</pubDate>
      <guid>https://www.wilsonpage.com/notes/2016-12-15-java-basic-sort-algorithms/</guid>
      <description>Java 基础算法（插入、选择、冒泡、快排）
一、直接插入排序 1、原理 从待排序的数中选出一个来，插入到前面的合适位置。
2、适用场景 基本有序的数据
3、代码实现 static int data[] = {12, 6, 17, 108, 97, 93, 256, 1024}; public static void insertSort() { int tmp, i = 0; // 遍历数组 for(int j = 0; j&amp;lt;data.length; j++) { // 依次取出每个数放入tmp tmp = data[j]; // 将取出的数与之前面一个比较 i = j - 1; // 若小于前面一个数，则将前面一个数后移（覆盖取出来的这个数的位置） while(i &amp;gt;= 0 &amp;amp;&amp;amp; tmp &amp;lt; data[i]) { data[i+1] = data[i]; // 继续和再前面一个数比较 i--; } // 将取出的数插入 data[i+1] = tmp; System.</description>
    </item>
  </channel>
</rss>
